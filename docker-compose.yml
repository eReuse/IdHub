services:
  id_index_api:
    init: true
    build:
      context: ./idIndexApi/
      dockerfile: ./Dockerfile
    container_name: id_index_api
    ports:
      - "3012:3012"
    restart: always
    volumes:
      - ${id_index_api__vol__data:-id_index_api__data}:/home/node/idIndexApi/data:rw
      - ${id_index_api__vol__src:-id_index_api__src}:/home/node/idIndexApi/src:ro
    networks:
      - ereuse

  blockchain_test_node:
    init: true
    # TODO I hope this is fine
    #   Allows 2 seconds for the container to gracefully shut down (by default is 10, and it always take 10)
    stop_grace_period: 2s
    environment:
      - MINING_INTERVAL=${MINING_INTERVAL:-1000}
    build:
      context: ./
      dockerfile: ./Dockerfile_blockchain_test_node
    container_name: blockchain_test_node
    ports:
      # use this to avoid attacks (by default)
      - "127.0.0.1:8545:8545"
      # if you want to expose or debug more, comment above line and
      #   uncomment the next one
      #- "8545:8545"
    restart: always
    networks:
      - ereuse

  # ereuse-dpp-api
  api_connector:
    init: true
    build: ./
    depends_on:
      - id_index_api
      - blockchain_test_node
      - veramo_api
    container_name: api_connector
    ports:
      - "3010:3010"
    restart: always
    volumes:
      - ${api_connector__vol__src:-api_connector__api_src}:/home/node/app/src:rw
      - ${api_connector__vol__shared:-./shared}:/home/node/app/shared:rw
      - ./.env:/home/node/app/.env:ro
      - ./hardhat-artifacts:/home/node/app/artifacts
      - ./hardhat-cache:/home/node/app/cache
    # TODO this is somehow redundant or not much consistent with shared volume
    # if this exist, writes api-connector_admin-token.txt file to shared path
    environment:
      - SHARED=./shared
    networks:
      - ereuse
    extra_hosts:
      # for localhost deployments: map localhost to reach the host machine
      #   thanks https://stackoverflow.com/a/43541681
      - 'localhost:host-gateway'

  did_resolver:
    init: true
    build:
      context: ./
      dockerfile: ./didResolverApi/Dockerfile
    depends_on:
      - api_connector
    container_name: did_resolver
    ports:
      - "3011:3011"
    restart: always
    volumes:
      - ${did_resolver__vol__api_src:-did_resolver__api_src}:/home/node/didResolverAPI/src:rw
      - ${did_resolver__vol__module_src:-did_resolver__module_src}:/home/node/didResolverModule/src:rw
      - ./.env:/home/node/didResolverAPI/src/.env:ro
    networks:
      - ereuse

  dpp_indexer:
    init: true
    build:
      context: ./
      dockerfile: ./observerModule/Dockerfile
    depends_on:
      - api_connector
    container_name: dpp_indexer # name of the built image
    environment:
      - HTTP_PORT=3014
    ports:
      - "3014:3014"
    restart: always
    volumes:
      - ${dpp_indexer__vol__data:-dpp_indexer__data}:/home/node/observerModule/data:rw
      - ${dpp_indexer__vol__src:-dpp_indexer__src}:/home/node/observerModule/src:ro
      - ${dpp_indexer__vol__shared:-./shared}:/home/node/observerModule/shared:rw
      - ./.env:/home/node/observerModule/src/.env:ro
    networks:
      - ereuse
    extra_hosts:
      # for localhost deployments: map localhost to reach the host machine
      #   thanks https://stackoverflow.com/a/43541681
      - 'localhost:host-gateway'

  veramo_api:
    init: true
    build:
      context: ./veramoApi
      dockerfile: ./Dockerfile
    container_name: veramo_api # name of the built image
    ports:
      - "3016:3016"
    restart: always
    volumes:
      - ${veramo_api__vol__src:-veramo_api__src}:/home/node/veramoApi/src:rw
      - ${veramo_api__vol__shared:-./shared}:/home/node/veramoApi/shared:rw
    networks:
      - ereuse

  create-operator-user:
    init: true
    build:
      context: ./create-operator-user
      dockerfile: ./Dockerfile
    container_name: create-operator-user
    depends_on:
      - api_connector
      - veramo_api
    volumes:
      - ${create_operator_user__vol__src:-create_operator_user__src}:/home/node/app/scripts:rw
      - ${create_operator_user__vol__shared:-./shared}:/home/node/app/shared:rw
    networks:
      - ereuse

  devicehub-django:
    init: true
    depends_on:
      - create-operator-user
      - id_index_api
    build:
      context: ./devicehub-django/
      dockerfile: ./docker/devicehub-django.Dockerfile
    environment:
      - DEBUG=${DH__DEBUG:-false}
      - DOMAIN=${DH__DOMAIN:-localhost}
      - ALLOWED_HOSTS=${DH__ALLOWED_HOSTS:-$DH__DOMAIN}
      - DEMO=${DH__DEMO:-false}
      - PREDEFINED_TOKEN=${DH__PREDEFINED_TOKEN:-}
      # TODO hardcoded in entrypoint
      # - ID_FEDERATED=
      - DPP=${DH__DPP:-false}
      - DPP_SHARED=/shared
      - IMPORT_SNAPSHOTS=${DH__IMPORT_SNAPSHOTS}
    ports:
      - 8000:8000
    volumes:
      - ${SNAPSHOTS_PATH:-./devicehub-django/example/snapshots}:/mnt/snapshots:ro
      - ${devicehub_django__vol__shared:-./shared}:/shared:rw
      - ./devicehub-django/:/opt/devicehub-django

    networks:
      - ereuse

  search:
    init: true
    build:
      context: ./searchEngine/
      #dockerfile: ./Dockerfile
    container_name: fuzzySearchEngine # name of the built image
    ports:
      - "80:3000"
    #restart: always
    environment:
      - REACT_APP_CONNECTOR_API=${SEARCH_REACT_APP_CONNECTOR_API}
      - REACT_APP_DPP_INDEXER=${SEARCH_REACT_APP_DPP_INDEXER}
      - REACT_APP_EREUSE_DID_RESOLVER=${SEARCH_REACT_APP_EREUSE_DID_RESOLVER}
      - REACT_APP_ID_INDEX_API=${SEARCH_REACT_APP_ID_INDEX_API}
      # TODO env var
      # src https://stackoverflow.com/questions/67986657/how-to-disable-eslint-during-build-phase-in-react
      - DISABLE_ESLINT_PLUGIN=true

    volumes:
      # TODO env vars???
      - ./searchEngine/src:/home/node/searchEngine/src:ro
      - ./searchEngine/public:/home/node/searchEngine/public:ro
      - ./shared:/home/node/searchEngine/shared
    networks:
      - ereuse

networks:
    ereuse:
      driver: bridge

volumes:
  shared:
  id_index_api__data:
  id_index_api__src:
  api_connector__api_src:
  did_resolver__api_src:
  did_resolver__module_src:
  dpp_indexer__data:
  dpp_indexer__src:
  veramo_api__src:
  create_operator_user__src:
