services:
  id_index_api:
    init: true
    build:
      context: ./idIndexApi/
      dockerfile: ./Dockerfile
    container_name: id_index_api
    ports:
      - "3012:3012"
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    volumes:
      - ${id_index_api__vol__data:-id_index_api__data}:/home/node/idIndexApi/data:rw
      - ${id_index_api__vol__src:-id_index_api__src}:/home/node/idIndexApi/src:ro

  blockchain_test_node:
    init: true
    # TODO I hope this is fine
    #   Allows 2 seconds for the container to gracefully shut down (by default is 10, and it always take 10)
    stop_grace_period: 2s
    environment:
      - MINING_INTERVAL=${DLT_MINING_INTERVAL:-1000}
      - CHAIN_ID=${DLT_CHAIN_ID:-457}
    build:
      context: ./
      dockerfile: ./Dockerfile_blockchain_test_node
    container_name: blockchain_test_node
    ports:
      # use this to avoid attacks (by default)
      - "127.0.0.1:8545:8545"
      # if you want to expose or debug more, comment above line and
      #   uncomment the next one
      #- "8545:8545"
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}

  # ereuse-dpp-api
  api_connector:
    init: true
    build: ./
    depends_on:
      - id_index_api
      - blockchain_test_node
      - veramo_api
    container_name: api_connector
    ports:
      - "3010:3010"
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    volumes:
      - ${api_connector__vol__src:-api_connector__api_src}:/home/node/app/src:rw
      - ${api_connector__vol__shared:-./shared}:/home/node/app/shared:rw
      - ./.env:/home/node/app/.env:ro
      - ./hardhat-artifacts:/home/node/app/artifacts
      - ./hardhat-cache:/home/node/app/cache
    # TODO this is somehow redundant or not much consistent with shared volume
    # if this exist, writes api-connector_admin-token.txt file to shared path
    environment:
      - CHAIN_ID=${DLT_CHAIN_ID:-457}
      - SHARED=./shared
    extra_hosts:
      # for localhost deployments: map localhost to reach the host machine
      #   thanks https://stackoverflow.com/a/43541681
      - 'localhost:host-gateway'

  did_resolver:
    init: true
    build:
      context: ./
      dockerfile: ./didResolverApi/Dockerfile
    depends_on:
      - api_connector
    container_name: did_resolver
    ports:
      - "3011:3011"
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    volumes:
      - ${did_resolver__vol__api_src:-did_resolver__api_src}:/home/node/didResolverAPI/src:rw
      - ${did_resolver__vol__module_src:-did_resolver__module_src}:/home/node/didResolverModule/src:rw
      - ./.env:/home/node/didResolverAPI/src/.env:ro

  dpp_indexer:
    init: true
    build:
      context: ./
      dockerfile: ./observerModule/Dockerfile
    depends_on:
      - api_connector
    container_name: dpp_indexer # name of the built image
    environment:
      - HTTP_PORT=3014
    ports:
      - "3014:3014"
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    volumes:
      - ${dpp_indexer__vol__data:-dpp_indexer__data}:/home/node/observerModule/data:rw
      - ${dpp_indexer__vol__src:-dpp_indexer__src}:/home/node/observerModule/src:ro
      - ${dpp_indexer__vol__shared:-./shared}:/home/node/observerModule/shared:rw
      - ./.env:/home/node/observerModule/src/.env:ro
    extra_hosts:
      # for localhost deployments: map localhost to reach the host machine
      #   thanks https://stackoverflow.com/a/43541681
      - 'localhost:host-gateway'

  veramo_api:
    init: true
    build:
      context: ./veramoApi
      dockerfile: ./Dockerfile
    environment:
      - CHAIN_ID=${DLT_CHAIN_ID:-457}
    container_name: veramo_api # name of the built image
    ports:
      - "3016:3016"
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    volumes:
      - ${veramo_api__vol__src:-veramo_api__src}:/home/node/veramoApi/src:rw
      - ${veramo_api__vol__shared:-./shared}:/home/node/veramoApi/shared:rw

  create-operator-user:
    init: true
    build:
      context: ./create-operator-user
      dockerfile: ./Dockerfile
    container_name: create-operator-user
    depends_on:
      - api_connector
      - veramo_api
    volumes:
      - ${create_operator_user__vol__src:-create_operator_user__src}:/home/node/app/scripts:rw
      - ${create_operator_user__vol__shared:-./shared}:/home/node/app/shared:rw

  devicehub-django:
    init: true
    depends_on:
      - create-operator-user
      - id_index_api
    image: ghcr.io/ereuse/devicehub-django:${DEVICEHUB_DOCKER_TAG:-stable}
    environment:
      - DEBUG=${DEVICEHUB_DEBUG:-false}
      - DEVICEHUB_HOST=${DEVICEHUB_HOST:-localhost}
      - PORT=${DEVICEHUB_PORT:-8000}
      - ALLOWED_HOSTS=${DEVICEHUB_ALLOWED_HOSTS:-$DEVICEHUB_HOST}
      - DEMO=${DEVICEHUB_DEMO:-false}
      - DEMO_IDHUB_DOMAIN=${DEMO_IDHUB_DOMAIN:-}
      - DEMO_IDHUB_PREDEFINED_TOKEN=${IDHUB__PREDEFINED_TOKEN:-}
      - DPP=${DEVICEHUB_DPP:-false}
      - DPP_SHARED=/shared
      - IMPORT_SNAPSHOTS=${DEVICEHUB_IMPORT_SNAPSHOTS}
    ports:
      - ${DEVICEHUB_PORT:-8000}:${DEVICEHUB_PORT:-8000}
    volumes:
      # uncomment and put right path to develop devicehub on top of this
      #- /path/to/my/devicehub-django:/opt/devicehub-django
      - ${devicehub_django__vol__shared:-./shared}:/shared:rw

  search:
    init: true
    build:
      context: ./searchEngine/
      #dockerfile: ./Dockerfile
    container_name: fuzzySearchEngine # name of the built image
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    environment:
      - REACT_APP_CONNECTOR_API=${SEARCH_REACT_APP_CONNECTOR_API}
      - REACT_APP_DPP_INDEXER=${SEARCH_REACT_APP_DPP_INDEXER}
      - REACT_APP_EREUSE_DID_RESOLVER=${SEARCH_REACT_APP_EREUSE_DID_RESOLVER}
      - REACT_APP_ID_INDEX_API=${SEARCH_REACT_APP_ID_INDEX_API}
      # TODO env var
      # src https://stackoverflow.com/questions/67986657/how-to-disable-eslint-during-build-phase-in-react
      - DISABLE_ESLINT_PLUGIN=true

    ports:
     - "3000:3000"

    volumes:
      # TODO env vars???
      - ./searchEngine/src:/home/node/searchEngine/src:ro
      - ./searchEngine/public:/home/node/searchEngine/public:ro
      - ./shared:/home/node/searchEngine/shared

  idhub:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    init: true
    image: ghcr.io/ereuse/idhub:${IDHUB_DOCKER_TAG:-stable}
    environment:
      - LOCAL_USER_ID=${APP_LOCAL_USER_ID}
      - DOMAIN=${APP_DOMAIN:-localhost}
      - ALLOWED_HOSTS=${IDHUB_ALLOWED_HOSTS:-$IDHUB_DOMAIN}
      - DEBUG=${IDHUB_DEBUG:-true}
      - DEMO=${IDHUB_DEMO:-true}
      - DEMO_AUTODECRYPT=${IDHUB_DEMO_AUTODECRYPT:-false}
      - REMOVE_DATA=${IDHUB_REMOVE_DATA:-false}
      - DB_TYPE=${IDHUB_DB_TYPE:-postgres}
      - CREATE_TEST_USERS=${IDHUB_CREATE_TEST_USERS:-true}
      - INIT_ADMIN_EMAIL=${IDHUB_INIT_ADMIN_EMAIL}
      - INIT_ADMIN_PASSWORD=${IDHUB_INIT_ADMIN_PASSWORD}
      - POLICY_PRIVACY=${IDHUB_POLICY_PRIVACY}
      - POLICY_LEGAL=${IDHUB_POLICY_LEGAL}
      - POLICY_COOKIES=${IDHUB_POLICY_COOKIES}
      - ENABLE_EMAIL=${IDHUB_ENABLE_EMAIL:-true}
      - ENABLE_2FACTOR_AUTH=${IDHUB_ENABLE_2FACTOR_AUTH:-true}
      - ENABLE_DOMAIN_CHECKER=${IDHUB_ENABLE_DOMAIN_CHECKER:-true}
      - PREDEFINED_TOKEN=${IDHUB_PREDEFINED_TOKEN:-}
      - SECRET_KEY=${IDHUB_SECRET_KEY}
      - STATIC_ROOT=${IDHUB_STATIC_ROOT:-/static/}
      - MEDIA_ROOT=${IDHUB_MEDIA_ROOT:-/media/}
      - PORT=${IDHUB_PORT:-9001}
      - DEFAULT_FROM_EMAIL=${IDHUB_DEFAULT_FROM_EMAIL}
      - EMAIL_HOST=${IDHUB_EMAIL_HOST}
      - EMAIL_HOST_USER=${IDHUB_EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${IDHUB_EMAIL_HOST_PASSWORD}
      - EMAIL_PORT=${IDHUB_EMAIL_PORT}
      - EMAIL_USE_TLS=${IDHUB_EMAIL_USE_TLS}
      - EMAIL_BACKEND=${IDHUB_EMAIL_BACKEND}
      - SUPPORTED_CREDENTIALS=${IDHUB_SUPPORTED_CREDENTIALS:-}
      - SYNC_ORG_DEV=${IDHUB_SYNC_ORG_DEV}
      - DB_PORT=${IDHUB_POSTGRES_PORT:-5432}
      - DB_HOST=${IDHUB_POSTGRES_HOST:-idhub-postgres}
      - DB_NAME=${IDHUB_POSTGRES_NAME}
      - DB_USER=${IDHUB_POSTGRES_USER}
      - DB_PASSWORD=${IDHUB_POSTGRES_PASSWORD}
      - TIME_ZONE=${IDHUB_TIME_ZONE}
      - DPP=${IDHUB_DPP:-false}
      - API_DLT_URL=${IDHUB_API_DLT_URL}
      - API_DLT_TOKEN=${IDHUB_API_DLT_TOKEN}
    ports:
      - ${IDHUB_PORT:-9001}:${IDHUB_PORT:-9001}
    volumes:
      - ${IDHUB_VOLUME:-./idhub:/opt/idhub}

  rproxy:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    # image: TODO
    build:
      context: .
      dockerfile: ./docker/nginx.Dockerfile
    environment:
      - WEBSERVER_HOST=${APP_DOMAIN}
      - FAKE_HTTP_CERT=${RPROXY_FAKE_HTTP_CERT}
      - IDHUB_PORT=${IDHUB_PORT:-9001}
    ports:
     - "80:80"
     - "443:443"
    volumes:
      - type: bind
        source: docker/nginx/app.template
        target: /etc/nginx/conf.d/app.template
      # TODO static nginx files
      #- static:/path/to/static/files:ro
      - certbot-www:/var/www/certbot
      - ${APP_ROOT_DIR}/${APP_DOCKER_DIR}/${IDHUB_DOMAIN}/certbot/conf:/etc/letsencrypt
    depends_on:
      - idhub
      - search

  certbot:
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    profiles: [letsencrypt]
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ${APP_ROOT_DIR}/${APP_DOCKER_DIR}/${IDHUB_DOMAIN}/certbot/conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    entrypoint: /bin/sh -c "trap exit TERM; while true; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done;"



volumes:
  shared:
  id_index_api__data:
  id_index_api__src:
  api_connector__api_src:
  did_resolver__api_src:
  did_resolver__module_src:
  dpp_indexer__data:
  dpp_indexer__src:
  veramo_api__src:
  create_operator_user__src:
  certbot-www:
  IDHUB_VOLUME:
